name: Sync Dev to Main

on:
  workflow_dispatch:
  
jobs:
  sync-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
          
      - name: Configure Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          
      - name: Fetch all branches
        run: |
          git fetch origin
          
      - name: Merge dev into main
        run: |
          git merge origin/dev --no-edit
          git push origin main
        env:
          # Isso usa o token padrão que tem permissões especiais (funcionará mesmo com proteções de branch)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install sshpass and rsync
        run: sudo apt-get install -y sshpass rsync
          
      - name: Backup Current Production
        env:
          SSH_PASS: 9TKSUsh2PAV
        run: |
          export SSHPASS=$SSH_PASS
          timestamp=$(date +%Y%m%d_%H%M%S)
          sshpass -e ssh -o StrictHostKeyChecking=no root@157.230.229.74 'mkdir -p /root/wpp-multiatendimento/backup/$timestamp && cp -r /root/wpp-multiatendimento/main/* /root/wpp-multiatendimento/backup/$timestamp/ || true'
          
      - name: Deploy to Production Server
        env:
          SSH_PASS: 9TKSUsh2PAV
        run: |
          export SSHPASS=$SSH_PASS
          # Usar rsync com a opção --delete para excluir arquivos que não existem mais
          sshpass -e rsync -avz --delete --exclude="node_modules" -e "ssh -o StrictHostKeyChecking=no" ./ root@157.230.229.74:/root/wpp-multiatendimento/main/
          sshpass -e ssh -o StrictHostKeyChecking=no root@157.230.229.74 'cd /root/wpp-multiatendimento/main && npm install && export BRANCH=main && pm2 delete wpp-multiatendimento-main || true && PORT=3000 BRANCH=main pm2 start index.js --name wpp-multiatendimento-main'